// ********************************************************************************************************************
//
//     10/23/2018   VS for Mac Typing Performance
//
// ********************************************************************************************************************

// TODO

// Typing User Experience Buckets
//  Count the number of delays (keystrokes over 512ms) in a week
//  Good <3
//  Poor < 10
//  Unacceptable >= 10

// Typing Bucket Definitions
//  Bucket 0: up to 8ms
//  Bucket 1: up to 16ms
//  Bucket 2: up to 32ms
//  Bucket 3: up to 64ms
//  Bucket 4: up to 128ms
//  Bucket 5: up to 256ms
//  Bucket 6: up to 512ms
//  Bucket 7: up to 1024ms
//  Bucket 8: more than 1024ms


// 1. Basic query with uninteresting fields pruned
let EndDate = startofday(now());
let StartDate = EndDate - 7d;
cluster("Ddtelinsights").database("DDTelInsights").TiP_Diagnostic_Typing_TypeChar_VisualStudioForMac
| where ServerUploadTimestamp between(StartDate..EndDate)
| extend Bucket0 = tolong(Buckets["xs.editor.textcommandtiming.bucket0"]), Bucket1 = tolong(Buckets["xs.editor.textcommandtiming.bucket1"]), Bucket2 = tolong(Buckets["xs.editor.textcommandtiming.bucket2"]), Bucket3 = tolong(Buckets["xs.editor.textcommandtiming.bucket3"]), Bucket4 = tolong(Buckets["xs.editor.textcommandtiming.bucket4"]), Bucket5 = tolong(Buckets["xs.editor.textcommandtiming.bucket5"]), Bucket6 = tolong(Buckets["xs.editor.textcommandtiming.bucket6"]), Bucket7 = tolong(Buckets["xs.editor.textcommandtiming.bucket7"]), Bucket8 = tolong(Buckets["xs.editor.textcommandtiming.bucket8"])
| extend TotalKeystrokes = Bucket0 + Bucket1 + Bucket2 + Bucket3 + Bucket4 + Bucket5 + Bucket6 + Bucket7 + Bucket8
| extend TypingDelays = Bucket7 + Bucket8
| project-away EventId , MachineId , MacAddressHash , SessionId , UserId , PartitionDateUtc , AdvancedIngestionTimestampUtc , DataModelActionResult , DataModelActionType , DataModelCorrelationId , BranchName , ClientTimestamp, DataModelEntityName, DataModelEntityType, DataModelFeatureName, DataModelProductName, SQLizerPartitionIndex , SQLizerStreamDateId   
| limit 100

// 1a. Basic query joined to RAW xs/editor/textcommandtiming/typechar for additional fields
let EndDate = startofday(now());
let StartDate = EndDate - 7d;
cluster("Ddtelinsights").database("DDTelInsights").TiP_Diagnostic_Typing_TypeChar_VisualStudioForMac
| where ServerUploadTimestamp between(StartDate..EndDate)
| join kind=inner (
    cluster("ddteldata").database("VSMac").RawEventsVSMac 
    | where ServerUploadTimestampUtc between(StartDate..EndDate) and EventName == "xs/editor/textcommandtiming/typechar"
    | project SessionId, Measures, Properties, TimeSinceSessionStart 
) on SessionId
// Extend fields from the TiP table
| extend MinVersion = extract("(.*)\\.[0-9.]+", 1, ExeVersion)
| where MinVersion startswith "7.8"
| extend Bucket0 = tolong(Buckets["xs.editor.textcommandtiming.bucket0"]), Bucket1 = tolong(Buckets["xs.editor.textcommandtiming.bucket1"]), Bucket2 = tolong(Buckets["xs.editor.textcommandtiming.bucket2"]), Bucket3 = tolong(Buckets["xs.editor.textcommandtiming.bucket3"]), Bucket4 = tolong(Buckets["xs.editor.textcommandtiming.bucket4"]), Bucket5 = tolong(Buckets["xs.editor.textcommandtiming.bucket5"]), Bucket6 = tolong(Buckets["xs.editor.textcommandtiming.bucket6"]), Bucket7 = tolong(Buckets["xs.editor.textcommandtiming.bucket7"]), Bucket8 = tolong(Buckets["xs.editor.textcommandtiming.bucket8"])
| extend TotalKeystrokes = Bucket0 + Bucket1 + Bucket2 + Bucket3 + Bucket4 + Bucket5 + Bucket6 + Bucket7 + Bucket8
| extend TypingDelays = Bucket7 + Bucket8
// Extend fields from the xs/editor/textcommandtiming/typchar event
| extend FileSize = tolong(Properties["xs.editor.textcommandtiming.lengthatstart"]), 
    LineCountAtStart = tolong(Properties["xs.editor.textcommandtiming.linecountatstart"]),
    LineCountDelta = tolong(Properties["xs.editor.textcommandtiming.linecountdelta"]),
    FileSizeDelta = tolong(Properties["xs.editor.textcommandtiming.lengthdelta"])
| project-away EventId , MachineId , MacAddressHash , SessionId1 , UserId , PartitionDateUtc , AdvancedIngestionTimestampUtc , DataModelActionResult , DataModelActionType , DataModelCorrelationId , BranchName , ClientTimestamp, DataModelEntityName, DataModelEntityType, DataModelFeatureName, DataModelProductName, SQLizerPartitionIndex , SQLizerStreamDateId
| limit 100

// 2. Basic query joined to the the context
let EndDate = startofday(now());
let StartDate = EndDate - 7d;
cluster("Ddtelinsights").database("DDTelInsights").TiP_Diagnostic_Typing_TypeChar_VisualStudioForMac
| where ServerUploadTimestamp between(StartDate..EndDate)
| join kind=inner (
    cluster("ddteldata").database("VSMac").RawEventsVSMac 
    | where ServerUploadTimestampUtc between(StartDate..EndDate) and EventName == "context/postproperty"
) on SessionId
// Extensions from typing event
| extend MinVersion = extract("(.*)\\.[0-9.]+", 1, ExeVersion)
| extend Bucket0 = tolong(Buckets["xs.editor.textcommandtiming.bucket0"]), Bucket1 = tolong(Buckets["xs.editor.textcommandtiming.bucket1"]), Bucket2 = tolong(Buckets["xs.editor.textcommandtiming.bucket2"]), Bucket3 = tolong(Buckets["xs.editor.textcommandtiming.bucket3"]), Bucket4 = tolong(Buckets["xs.editor.textcommandtiming.bucket4"]), Bucket5 = tolong(Buckets["xs.editor.textcommandtiming.bucket5"]), Bucket6 = tolong(Buckets["xs.editor.textcommandtiming.bucket6"]), Bucket7 = tolong(Buckets["xs.editor.textcommandtiming.bucket7"]), Bucket8 = tolong(Buckets["xs.editor.textcommandtiming.bucket8"])
| extend TotalKeystrokes = Bucket0 + Bucket1 + Bucket2 + Bucket3 + Bucket4 + Bucket5 + Bucket6 + Bucket7 + Bucket8
| extend TypingDelays = Bucket7 + Bucket8
// Extensions from context/postproperty event
| extend CpuFrequency = todouble(Measures["xs.core.machine.processor.frequency"])
| extend DiskFree = todouble(Measures["xs.core.os.drive.freevolumespace"]), DiskSize = todouble(Measures["xs.core.os.drive.volumesize"]), MediaType = tostring(Properties["xs.core.machine.disk.os.mediatype"]), DiskFilesystem = tostring(Properties["vs.core.os.drive.filesystem"])
| extend TotalRAMGb = tolong(Measures["xs.core.machine.totalram"]) / 1073741824
| extend DisplayCount = tolong(Measures["vs.core.os.display.count"]), DisplayResolution = tolong( Measures["vs.core.os.display.resolution"]), DisplayVirtualXY = tostring(Properties["vs.core.os.display.virtualxy"]), DisplayXY = tostring(Properties["vs.core.os.display.xy"])
| extend ProcessorArch = tostring(Properties["vs.core.machine.processor.architecture"]), ProcessorDesc = tostring(Properties["vs.core.machine.processor.description"])
| extend IsDomainMember = tostring(Properties["vs.core.user.isdomainmember"]), ClrVersion = tostring(Properties["vs.core.os.clrversion"]), UserPrivilege = tostring(Properties["vs.core.user.privilege"])
| project-away EventId , MachineId , MacAddressHash , SessionId , UserId , PartitionDateUtc , AdvancedIngestionTimestampUtc , DataModelActionResult , DataModelActionType , DataModelCorrelationId , BranchName , ClientTimestamp, DataModelEntityName, DataModelEntityType, DataModelFeatureName, DataModelProductName, SQLizerPartitionIndex , SQLizerStreamDateId   
| limit 100

// 3. Basic query showing user experience buckets
let EndDate = startofday(now());
let StartDate = EndDate - 7d; // DO NOT CHANGE FROM 7D. The experience buckets are based on 7d intervals, changing this value will yield invalid results.
cluster("Ddtelinsights").database("DDTelInsights").TiP_Diagnostic_Typing_TypeChar_VisualStudioForMac
| where ServerUploadTimestamp between(StartDate..EndDate)
| join kind=inner (
    cluster("ddteldata").database("VSMac").RawEventsVSMac 
    | where ServerUploadTimestampUtc between(StartDate..EndDate) and EventName == "context/postproperty"
) on SessionId
// Extensions from typing event
| extend MinVersion = extract("(.*)\\.[0-9.]+", 1, ExeVersion)
| extend Bucket0 = tolong(Buckets["xs.editor.textcommandtiming.bucket0"]), Bucket1 = tolong(Buckets["xs.editor.textcommandtiming.bucket1"]), Bucket2 = tolong(Buckets["xs.editor.textcommandtiming.bucket2"]), Bucket3 = tolong(Buckets["xs.editor.textcommandtiming.bucket3"]), Bucket4 = tolong(Buckets["xs.editor.textcommandtiming.bucket4"]), Bucket5 = tolong(Buckets["xs.editor.textcommandtiming.bucket5"]), Bucket6 = tolong(Buckets["xs.editor.textcommandtiming.bucket6"]), Bucket7 = tolong(Buckets["xs.editor.textcommandtiming.bucket7"]), Bucket8 = tolong(Buckets["xs.editor.textcommandtiming.bucket8"])
| extend TotalKeystrokes = Bucket0 + Bucket1 + Bucket2 + Bucket3 + Bucket4 + Bucket5 + Bucket6 + Bucket7 + Bucket8
| extend TypingDelays = Bucket7 + Bucket8
// Extensions from context/postproperty event
| extend CpuFrequency = todouble(Measures["xs.core.machine.processor.frequency"])
| extend DiskFree = todouble(Measures["xs.core.os.drive.freevolumespace"]), DiskSize = todouble(Measures["xs.core.os.drive.volumesize"]), MediaType = tostring(Properties["xs.core.machine.disk.os.mediatype"]), DiskFilesystem = tostring(Properties["vs.core.os.drive.filesystem"])
| extend TotalRAM = tolong(Measures["xs.core.machine.totalram"])
| extend DisplayCount = tolong(Measures["vs.core.os.display.count"]), DisplayResolution = tolong( Measures["vs.core.os.display.resolution"]), DisplayVirtualXY = tostring(Properties["vs.core.os.display.virtualxy"]), DisplayXY = tostring(Properties["vs.core.os.display.xy"])
| extend ProcessorArch = tostring(Properties["vs.core.machine.processor.architecture"]), ProcessorDesc = tostring(Properties["vs.core.machine.processor.description"])
| extend IsDomainMember = tostring(Properties["vs.core.user.isdomainmember"]), ClrVersion = tostring(Properties["vs.core.os.clrversion"]), UserPrivilege = tostring(Properties["vs.core.user.privilege"])
| project-away EventId , MachineId , SessionId , PartitionDateUtc , AdvancedIngestionTimestampUtc , DataModelActionResult , DataModelActionType , DataModelCorrelationId , BranchName , ClientTimestamp, DataModelEntityName, DataModelEntityType, DataModelFeatureName, DataModelProductName, SQLizerPartitionIndex , SQLizerStreamDateId
| summarize WeeklyKeystrokeCount = sum(TotalKeystrokes), TypingDelayCount = sum(TypingDelays) by MacAddressHash
| where WeeklyKeystrokeCount > 500
| extend ExperienceBucket = case( TypingDelayCount < 3, "Good", TypingDelayCount < 10, "Poor", "Unacceptable")
| summarize count() by ExperienceBucket
| render piechart

// 3a. Basic query showing user experience buckets by File Extension
let EndDate = startofday(now());
let StartDate = EndDate - 7d; // DO NOT CHANGE FROM 7D. The experience buckets are based on 7d intervals, changing this value will yield invalid results.
cluster("Ddtelinsights").database("DDTelInsights").TiP_Diagnostic_Typing_TypeChar_VisualStudioForMac
| where ServerUploadTimestamp between(StartDate..EndDate)
| join kind=inner (
    cluster("ddteldata").database("VSMac").RawEventsVSMac 
    | where ServerUploadTimestampUtc between(StartDate..EndDate) and EventName == "context/postproperty"
) on SessionId
| where Extension in (".cs", ".xaml", ".cshtml", ".xml", ".axml", ".json", ".resx", ".csproj", ".html", ".js", ".txt", ".shader", ".config", ".css", ".fs", ".ts", ".aspx", ".strings", ".targets", ".vb", ".fsx", ".yml", ".cpp", ".csv")
// Extensions from typing event
| extend MinVersion = extract("(.*)\\.[0-9.]+", 1, ExeVersion)
| extend Bucket0 = tolong(Buckets["xs.editor.textcommandtiming.bucket0"]), Bucket1 = tolong(Buckets["xs.editor.textcommandtiming.bucket1"]), Bucket2 = tolong(Buckets["xs.editor.textcommandtiming.bucket2"]), Bucket3 = tolong(Buckets["xs.editor.textcommandtiming.bucket3"]), Bucket4 = tolong(Buckets["xs.editor.textcommandtiming.bucket4"]), Bucket5 = tolong(Buckets["xs.editor.textcommandtiming.bucket5"]), Bucket6 = tolong(Buckets["xs.editor.textcommandtiming.bucket6"]), Bucket7 = tolong(Buckets["xs.editor.textcommandtiming.bucket7"]), Bucket8 = tolong(Buckets["xs.editor.textcommandtiming.bucket8"])
| extend TotalKeystrokes = Bucket0 + Bucket1 + Bucket2 + Bucket3 + Bucket4 + Bucket5 + Bucket6 + Bucket7 + Bucket8
| extend TypingDelays = Bucket7 + Bucket8
// Extensions from context/postproperty event
| extend CpuFrequency = todouble(Measures["xs.core.machine.processor.frequency"])
| extend DiskFree = todouble(Measures["xs.core.os.drive.freevolumespace"]), DiskSize = todouble(Measures["xs.core.os.drive.volumesize"]), MediaType = tostring(Properties["xs.core.machine.disk.os.mediatype"]), DiskFilesystem = tostring(Properties["vs.core.os.drive.filesystem"])
| extend TotalRAM = tolong(Measures["xs.core.machine.totalram"])
| extend DisplayCount = tolong(Measures["vs.core.os.display.count"]), DisplayResolution = tolong( Measures["vs.core.os.display.resolution"]), DisplayVirtualXY = tostring(Properties["vs.core.os.display.virtualxy"]), DisplayXY = tostring(Properties["vs.core.os.display.xy"])
| extend ProcessorArch = tostring(Properties["vs.core.machine.processor.architecture"]), ProcessorDesc = tostring(Properties["vs.core.machine.processor.description"])
| extend IsDomainMember = tostring(Properties["vs.core.user.isdomainmember"]), ClrVersion = tostring(Properties["vs.core.os.clrversion"]), UserPrivilege = tostring(Properties["vs.core.user.privilege"])
| project-away EventId , MachineId , SessionId , PartitionDateUtc , AdvancedIngestionTimestampUtc , DataModelActionResult , DataModelActionType , DataModelCorrelationId , BranchName , ClientTimestamp, DataModelEntityName, DataModelEntityType, DataModelFeatureName, DataModelProductName, SQLizerPartitionIndex , SQLizerStreamDateId
| summarize WeeklyKeystrokeCount = sum(TotalKeystrokes), TypingDelayCount = sum(TypingDelays) by MacAddressHash, Extension
| where WeeklyKeystrokeCount > 500
| extend ExperienceBucket = case( TypingDelayCount < 3, "Good", TypingDelayCount < 10, "Poor", "Unacceptable")
| summarize count() by ExperienceBucket, Extension
| order by count_ desc, ExperienceBucket desc

// 4. Look at time since session start
let EndDate = startofday(now());
let StartDate = EndDate - 7d;
cluster("Ddtelinsights").database("DDTelInsights").TiP_Diagnostic_Typing_TypeChar_VisualStudioForMac
| where ServerUploadTimestamp between(StartDate..EndDate)
| join kind=inner (
    cluster("ddteldata").database("VSMac").RawEventsVSMac 
    | where ServerUploadTimestampUtc between(StartDate..EndDate) and EventName == "xs/editor/textcommandtiming/typechar"
    | project SessionId, Measures, Properties, TimeSinceSessionStart 
) on SessionId
// Extend fields from the TiP table
| extend MinVersion = extract("(.*)\\.[0-9.]+", 1, ExeVersion)
| extend Bucket0 = tolong(Buckets["xs.editor.textcommandtiming.bucket0"]), Bucket1 = tolong(Buckets["xs.editor.textcommandtiming.bucket1"]), Bucket2 = tolong(Buckets["xs.editor.textcommandtiming.bucket2"]), Bucket3 = tolong(Buckets["xs.editor.textcommandtiming.bucket3"]), Bucket4 = tolong(Buckets["xs.editor.textcommandtiming.bucket4"]), Bucket5 = tolong(Buckets["xs.editor.textcommandtiming.bucket5"]), Bucket6 = tolong(Buckets["xs.editor.textcommandtiming.bucket6"]), Bucket7 = tolong(Buckets["xs.editor.textcommandtiming.bucket7"]), Bucket8 = tolong(Buckets["xs.editor.textcommandtiming.bucket8"])
| extend TotalKeystrokes = Bucket0 + Bucket1 + Bucket2 + Bucket3 + Bucket4 + Bucket5 + Bucket6 + Bucket7 + Bucket8
| extend TypingDelays = Bucket7 + Bucket8
| extend PercentDelays = todouble(TypingDelays) / TotalKeystrokes 
// Extend fields from the xs/editor/textcommandtiming/typchar event
| project-away EventId , MachineId , MacAddressHash , SessionId1 , UserId , PartitionDateUtc , AdvancedIngestionTimestampUtc , DataModelActionResult , DataModelActionType , DataModelCorrelationId , BranchName , ClientTimestamp, DataModelEntityName, DataModelEntityType, DataModelFeatureName, DataModelProductName, SQLizerPartitionIndex , SQLizerStreamDateId
| summarize SessionCount = count(), (95th) = percentiles(PercentDelays, 95) by bin(TimeSinceSessionStart, 60000)
| where TimeSinceSessionStart >= 0
| order by TimeSinceSessionStart asc nulls last 
| limit 250

// 5. Percent delays by file type
let EndDate = startofday(now());
let StartDate = EndDate - 30d;
cluster("Ddtelinsights").database("DDTelInsights").TiP_Diagnostic_Typing_TypeChar_VisualStudioForMac
| where ServerUploadTimestamp between(StartDate..EndDate)
| extend Bucket0 = tolong(Buckets["xs.editor.textcommandtiming.bucket0"]), Bucket1 = tolong(Buckets["xs.editor.textcommandtiming.bucket1"]), Bucket2 = tolong(Buckets["xs.editor.textcommandtiming.bucket2"]), Bucket3 = tolong(Buckets["xs.editor.textcommandtiming.bucket3"]), Bucket4 = tolong(Buckets["xs.editor.textcommandtiming.bucket4"]), Bucket5 = tolong(Buckets["xs.editor.textcommandtiming.bucket5"]), Bucket6 = tolong(Buckets["xs.editor.textcommandtiming.bucket6"]), Bucket7 = tolong(Buckets["xs.editor.textcommandtiming.bucket7"]), Bucket8 = tolong(Buckets["xs.editor.textcommandtiming.bucket8"])
| extend TotalKeystrokes = Bucket0 + Bucket1 + Bucket2 + Bucket3 + Bucket4 + Bucket5 + Bucket6 + Bucket7 + Bucket8
| extend TypingDelays = Bucket7 + Bucket8
| extend PercentDelays = todouble(TypingDelays) / TotalKeystrokes 
| project-away EventId , MachineId , MacAddressHash , SessionId , UserId , PartitionDateUtc , AdvancedIngestionTimestampUtc , DataModelActionResult , DataModelActionType , DataModelCorrelationId , BranchName , ClientTimestamp, DataModelEntityName, DataModelEntityType, DataModelFeatureName, DataModelProductName, SQLizerPartitionIndex , SQLizerStreamDateId   
| summarize SessionCount = count(), (50th, 75th, 95th) = percentiles(PercentDelays, 50, 75, 95) by Extension
| where SessionCount > 1000 and isnotempty(Extension)
| order by SessionCount desc nulls last 
| render columnchart with (ycolumns = 75th, title = "VSfM Typing by File Extension") 

// 6. Does RAM affect the number of typing delays?
//    By user experience bucket
let EndDate = startofday(now());
let StartDate = EndDate - 7d;
cluster("Ddtelinsights").database("DDTelInsights").TiP_Diagnostic_Typing_TypeChar_VisualStudioForMac
| where ServerUploadTimestamp between(StartDate..EndDate)
| join kind=inner (
    cluster("ddteldata").database("VSMac").RawEventsVSMac 
    | where ServerUploadTimestampUtc between(StartDate..EndDate) and EventName == "context/postproperty"
) on SessionId
// Extensions from typing event
| extend MinVersion = extract("(.*)\\.[0-9.]+", 1, ExeVersion)
| extend Bucket0 = tolong(Buckets["xs.editor.textcommandtiming.bucket0"]), Bucket1 = tolong(Buckets["xs.editor.textcommandtiming.bucket1"]), Bucket2 = tolong(Buckets["xs.editor.textcommandtiming.bucket2"]), Bucket3 = tolong(Buckets["xs.editor.textcommandtiming.bucket3"]), Bucket4 = tolong(Buckets["xs.editor.textcommandtiming.bucket4"]), Bucket5 = tolong(Buckets["xs.editor.textcommandtiming.bucket5"]), Bucket6 = tolong(Buckets["xs.editor.textcommandtiming.bucket6"]), Bucket7 = tolong(Buckets["xs.editor.textcommandtiming.bucket7"]), Bucket8 = tolong(Buckets["xs.editor.textcommandtiming.bucket8"])
| extend TotalKeystrokes = Bucket0 + Bucket1 + Bucket2 + Bucket3 + Bucket4 + Bucket5 + Bucket6 + Bucket7 + Bucket8
| extend TypingDelays = Bucket7 + Bucket8
// Extensions from context/postproperty event
| extend CpuFrequency = todouble(Measures["xs.core.machine.processor.frequency"])
| extend DiskFree = todouble(Measures["xs.core.os.drive.freevolumespace"]), DiskSize = todouble(Measures["xs.core.os.drive.volumesize"]), MediaType = tostring(Properties["xs.core.machine.disk.os.mediatype"]), DiskFilesystem = tostring(Properties["vs.core.os.drive.filesystem"])
| extend TotalRAMGb = tolong(Measures["xs.core.machine.totalram"]) / 1073741824
| extend DisplayCount = tolong(Measures["vs.core.os.display.count"]), DisplayResolution = tolong( Measures["vs.core.os.display.resolution"]), DisplayVirtualXY = tostring(Properties["vs.core.os.display.virtualxy"]), DisplayXY = tostring(Properties["vs.core.os.display.xy"])
| extend ProcessorArch = tostring(Properties["vs.core.machine.processor.architecture"]), ProcessorDesc = tostring(Properties["vs.core.machine.processor.description"])
| extend IsDomainMember = tostring(Properties["vs.core.user.isdomainmember"]), ClrVersion = tostring(Properties["vs.core.os.clrversion"]), UserPrivilege = tostring(Properties["vs.core.user.privilege"])
| project-away EventId , MachineId , SessionId , UserId , PartitionDateUtc , AdvancedIngestionTimestampUtc , DataModelActionResult , DataModelActionType , DataModelCorrelationId , BranchName , ClientTimestamp, DataModelEntityName, DataModelEntityType, DataModelFeatureName, DataModelProductName, SQLizerPartitionIndex , SQLizerStreamDateId
| summarize WeeklyKeystrokeCount = sum(TotalKeystrokes), TypingDelayCount = sum(TypingDelays) by MacAddressHash, TotalRAMGb
| where isnotempty(TotalRAMGb) and WeeklyKeystrokeCount > 500
| extend ExperienceBucket = case( TypingDelayCount < 3, "Good", TypingDelayCount < 10, "Poor", "Unacceptable")
| summarize UserCount = count() by bin(TotalRAMGb, 4), ExperienceBucket
| where TotalRAMGb in (4, 8, 12, 16, 24, 32, 64) // filter out buckets with noise
| order by TotalRAMGb asc , ExperienceBucket asc 
| limit 100


// 6a. Does RAM affect the number of typing delays?
//    By user percent UI delays
let EndDate = startofday(now());
let StartDate = EndDate - 30d;
cluster("Ddtelinsights").database("DDTelInsights").TiP_Diagnostic_Typing_TypeChar_VisualStudioForMac
| where ServerUploadTimestamp between(StartDate..EndDate)
| join kind=inner (
    cluster("ddteldata").database("VSMac").RawEventsVSMac 
    | where ServerUploadTimestampUtc between(StartDate..EndDate) and EventName == "context/postproperty"
) on SessionId
// Extensions from typing event
| extend MinVersion = extract("(.*)\\.[0-9.]+", 1, ExeVersion)
| extend Bucket0 = tolong(Buckets["xs.editor.textcommandtiming.bucket0"]), Bucket1 = tolong(Buckets["xs.editor.textcommandtiming.bucket1"]), Bucket2 = tolong(Buckets["xs.editor.textcommandtiming.bucket2"]), Bucket3 = tolong(Buckets["xs.editor.textcommandtiming.bucket3"]), Bucket4 = tolong(Buckets["xs.editor.textcommandtiming.bucket4"]), Bucket5 = tolong(Buckets["xs.editor.textcommandtiming.bucket5"]), Bucket6 = tolong(Buckets["xs.editor.textcommandtiming.bucket6"]), Bucket7 = tolong(Buckets["xs.editor.textcommandtiming.bucket7"]), Bucket8 = tolong(Buckets["xs.editor.textcommandtiming.bucket8"])
| extend TotalKeystrokes = Bucket0 + Bucket1 + Bucket2 + Bucket3 + Bucket4 + Bucket5 + Bucket6 + Bucket7 + Bucket8
| extend TypingDelays = Bucket7 + Bucket8
| extend PercentDelays = todouble(TypingDelays) / TotalKeystrokes 
// Extensions from context/postproperty event
| extend TotalRAMGb = tolong(Measures["xs.core.machine.totalram"]) / 1073741824
| project-away EventId , MachineId , SessionId , UserId , PartitionDateUtc , AdvancedIngestionTimestampUtc , DataModelActionResult , DataModelActionType , DataModelCorrelationId , BranchName , ClientTimestamp, DataModelEntityName, DataModelEntityType, DataModelFeatureName, DataModelProductName, SQLizerPartitionIndex , SQLizerStreamDateId
//| where TotalKeystrokes > 100
| where TotalRAMGb in (4, 8, 12, 16, 24, 32, 64) // filter out buckets with noise
| summarize SessionCount = count(), MedianKeystrokes = percentile(TotalKeystrokes, 50), (50th, 75th, 95th) = percentiles(PercentDelays, 50, 75, 95) by bin(TotalRAMGb, 4)
| order by TotalRAMGb asc nulls last 

// 6b. Does RAM affect the number of typing delays?
//    By user percent UI delays for users with >500 total keystrokes
let EndDate = startofday(now());
let StartDate = EndDate - 30d;
cluster("Ddtelinsights").database("DDTelInsights").TiP_Diagnostic_Typing_TypeChar_VisualStudioForMac
| where ServerUploadTimestamp between(StartDate..EndDate)
| join kind=inner (
    cluster("ddteldata").database("VSMac").RawEventsVSMac 
    | where ServerUploadTimestampUtc between(StartDate..EndDate) and EventName == "context/postproperty"
) on SessionId
// Extensions from typing event
| extend MinVersion = extract("(.*)\\.[0-9.]+", 1, ExeVersion)
| extend Bucket0 = tolong(Buckets["xs.editor.textcommandtiming.bucket0"]), Bucket1 = tolong(Buckets["xs.editor.textcommandtiming.bucket1"]), Bucket2 = tolong(Buckets["xs.editor.textcommandtiming.bucket2"]), Bucket3 = tolong(Buckets["xs.editor.textcommandtiming.bucket3"]), Bucket4 = tolong(Buckets["xs.editor.textcommandtiming.bucket4"]), Bucket5 = tolong(Buckets["xs.editor.textcommandtiming.bucket5"]), Bucket6 = tolong(Buckets["xs.editor.textcommandtiming.bucket6"]), Bucket7 = tolong(Buckets["xs.editor.textcommandtiming.bucket7"]), Bucket8 = tolong(Buckets["xs.editor.textcommandtiming.bucket8"])
| extend TotalKeystrokes = Bucket0 + Bucket1 + Bucket2 + Bucket3 + Bucket4 + Bucket5 + Bucket6 + Bucket7 + Bucket8
| extend TypingDelays = Bucket7 + Bucket8
// Extensions from context/postproperty event
| extend TotalRAMGb = tolong(Measures["xs.core.machine.totalram"]) / 1073741824
| summarize WeeklyKeystrokes = sum(TotalKeystrokes), WeeklyTypingDelays = sum(TypingDelays), SessionCount = count(), TotalRAMGb = any(TotalRAMGb) by MacAddressHash
| where WeeklyKeystrokes > 500
| extend PercentDelays = todouble(WeeklyTypingDelays) / WeeklyKeystrokes
| summarize UserCount = count(), MedianKeystrokes = percentile(WeeklyKeystrokes, 50), (50th, 75th, 95th) = percentiles(PercentDelays, 50, 75, 95) by bin(TotalRAMGb, 4)
| where TotalRAMGb in (4, 8, 12, 16, 24, 32, 64) // filter out buckets with noise
| order by TotalRAMGb asc nulls last 


// 7. Histogram of delays per week
let EndDate = startofday(now());
let StartDate = EndDate - 7d;
cluster("Ddtelinsights").database("DDTelInsights").TiP_Diagnostic_Typing_TypeChar_VisualStudioForMac
| where ServerUploadTimestamp between(StartDate..EndDate)
| extend Bucket0 = tolong(Buckets["xs.editor.textcommandtiming.bucket0"]), Bucket1 = tolong(Buckets["xs.editor.textcommandtiming.bucket1"]), Bucket2 = tolong(Buckets["xs.editor.textcommandtiming.bucket2"]), Bucket3 = tolong(Buckets["xs.editor.textcommandtiming.bucket3"]), Bucket4 = tolong(Buckets["xs.editor.textcommandtiming.bucket4"]), Bucket5 = tolong(Buckets["xs.editor.textcommandtiming.bucket5"]), Bucket6 = tolong(Buckets["xs.editor.textcommandtiming.bucket6"]), Bucket7 = tolong(Buckets["xs.editor.textcommandtiming.bucket7"]), Bucket8 = tolong(Buckets["xs.editor.textcommandtiming.bucket8"])
| extend TotalKeystrokes = Bucket0 + Bucket1 + Bucket2 + Bucket3 + Bucket4 + Bucket5 + Bucket6 + Bucket7 + Bucket8
| extend TypingDelays = Bucket7 + Bucket8
| project-away EventId , MachineId , SessionId , UserId , PartitionDateUtc , AdvancedIngestionTimestampUtc , DataModelActionResult , DataModelActionType , DataModelCorrelationId , BranchName , ClientTimestamp, DataModelEntityName, DataModelEntityType, DataModelFeatureName, DataModelProductName, SQLizerPartitionIndex , SQLizerStreamDateId
| summarize WeeklyKeystrokes = sum(TotalKeystrokes), WeeklyDelays = sum(TypingDelays) by MacAddressHash
| where WeeklyKeystrokes > 500
| summarize UserCount = count() by WeeklyDelays
| order by WeeklyDelays asc
| limit 100
| render columnchart 

// 8. Percent delays by E360
let EndDate = startofday(now());
let StartDate = EndDate - 90d;
cluster("ddtelinsights").database("DDTelAppsStaging").VSM_Enterprise360
| where isnotempty(MasterAccountName) and MacAddressHash <> "abb83eba513e313a2d6dfbc21d6c88e48321d8fb0b552219fb250f9c8c6168d2"
| summarize count() by MacAddressHash, MasterAccountName
| project MacAddressHash, MasterAccountName
| join kind=inner hint.remote=auto (
    cluster("ddtelinsights").database("DDTelInsights").TiP_Diagnostic_Typing_TypeChar_VisualStudioForMac
    | where ServerUploadTimestamp between(StartDate..EndDate)
    | project-away EventId , MachineId , SessionId , UserId , PartitionDateUtc , AdvancedIngestionTimestampUtc , DataModelActionResult , DataModelActionType , DataModelCorrelationId , BranchName , ClientTimestamp, DataModelEntityName, DataModelEntityType, DataModelFeatureName, DataModelProductName, SQLizerPartitionIndex , SQLizerStreamDateId   
) on MacAddressHash
| extend Bucket0 = tolong(Buckets["xs.editor.textcommandtiming.bucket0"]), Bucket1 = tolong(Buckets["xs.editor.textcommandtiming.bucket1"]), Bucket2 = tolong(Buckets["xs.editor.textcommandtiming.bucket2"]), Bucket3 = tolong(Buckets["xs.editor.textcommandtiming.bucket3"]), Bucket4 = tolong(Buckets["xs.editor.textcommandtiming.bucket4"]), Bucket5 = tolong(Buckets["xs.editor.textcommandtiming.bucket5"]), Bucket6 = tolong(Buckets["xs.editor.textcommandtiming.bucket6"]), Bucket7 = tolong(Buckets["xs.editor.textcommandtiming.bucket7"]), Bucket8 = tolong(Buckets["xs.editor.textcommandtiming.bucket8"])
| extend TotalKeystrokes = Bucket0 + Bucket1 + Bucket2 + Bucket3 + Bucket4 + Bucket5 + Bucket6 + Bucket7 + Bucket8
| extend TypingDelays = Bucket7 + Bucket8
| extend PercentDelays = todouble(TypingDelays) / TotalKeystrokes 
| summarize SessionCount = count(), MachineCount = dcount(MacAddressHash), (50th, 75th, 95th) = percentiles(PercentDelays, 50, 75, 95) by MasterAccountName
| where isnotempty(MasterAccountName) and MachineCount > 4
| order by MachineCount desc nulls last 
| limit 200

// -------------------------------------------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------------------------------------------
//  Development queries below this line
// -------------------------------------------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------------------------------------------


// 6b: TODO
// - Compute a list of users who had at least 500 keystrokes in the last week
// - join query 6a to the list of users who have 500 keystrokes
// ALTERNATE - just do last week and summarize to the user level first (total keystrokes, total delays)


